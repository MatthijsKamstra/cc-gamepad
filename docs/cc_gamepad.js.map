{
"version":3,
"file":"cc_gamepad.js",
"sourceRoot":"file:///",
"sources":["/Users/matthijs/Documents/GIT/cc-gamepad/src/CCGamepad.hx","/Users/matthijs/Documents/GIT/cc-gamepad/src/model/constants/App.hx","/usr/local/lib/haxe/std/js/_std/haxe/ds/StringMap.hx","/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx"],
"sourcesContent":["package;\n\nimport haxe.ds.StringMap;\nimport js.html.Navigator;\nimport haxe.ds.ArraySort;\nimport js.Browser.*;\nimport js.Browser.navigator;\nimport svg.*;\nimport js.Syntax;\nimport js.html.Gamepad;\nimport js.html.GamepadButton;\nimport js.html.GamepadEvent;\n\nusing StringTools;\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API\n// https://github.com/luser/gamepadtest/blob/master/gamepadtest.js\n// checked in firefox and Chrome.. the rest I don't use\nclass CCGamepad {\n\tvar controllers:Array<Gamepad> = []; // {};\n\tvar map:Map<String, GamePadObject> = new Map();\n\n\tpublic function new() {\n\t\t// trace('START :: CCGamepad');\n\t\tdocument.addEventListener(\"DOMContentLoaded\", function(event) {\n\t\t\tconsole.log('${model.constants.App.NAME} Dom ready :: build: ${model.constants.App.getBuildDate()}');\n\n\t\t\tinitSetup();\n\t\t\tinit();\n\t\t});\n\t}\n\n\tfunction initSetup() {\n\t\tvar div = document.createDivElement();\n\t\tdiv.id = 'start-screen';\n\t\tdiv.innerHTML = '<h2>No gamepad detected</h2><p>If you have one, make sure it\\'s plugged in / paired, and press buttons to wake it up.</p>';\n\t\tdocument.body.appendChild(div);\n\t}\n\n\tfunction init() {\n\t\twindow.addEventListener(\"gamepadconnected\", onGamepadConnectedHandler);\n\t\twindow.addEventListener(\"gamepaddisconnected\", onGamepadDisconnectedHandler);\n\t\t// might only work in Firefox\n\t\twindow.addEventListener(\"gamepadbuttondown\", onGamepadButtonDownHandler);\n\t\twindow.addEventListener(\"gamepadbuttonup\", onGamepadButtonUpHandler);\n\t\twindow.addEventListener(\"gamepadaxismove\", onGamepadAxisMoveHandler);\n\t}\n\n\t// ____________________________________ handlers ____________________________________\n\tfunction onGamepadConnectedHandler(e:GamepadEvent) {\n\t\t// Gamepad connected\n\t\tconsole.log(\"Gamepad connected\", e.gamepad);\n\t\tvar gamePads:Array<Gamepad> = navigator.getGamepads();\n\t\tconsole.log(gamePads);\n\n\t\tvar gamepad = navigator.getGamepads()[0];\n\t\tconsole.log(gamepad);\n\t}\n\n\tfunction onGamepadDisconnectedHandler(e:GamepadEvent) {\n\t\t// Gamepad disconnected\n\t\tconsole.log(\"Gamepad disconnected\", e.gamepad);\n\t\t// removegamepad(e.gamepad);\n\t}\n\n\tfunction onGamepadButtonDownHandler(e) {\n\t\t// Gamepad button down\n\t\tconsole.log(\"Gamepad button down\", e.button, e.gamepad);\n\t}\n\n\tfunction onGamepadButtonUpHandler(e) {\n\t\t// Gamepad button up\n\t\tconsole.log(\"Gamepad button up\", e.button, e.gamepad);\n\t}\n\n\tfunction onGamepadAxisMoveHandler(e) {\n\t\t// Gamepad axis movbe\n\t\tconsole.log(\"Gamepad axis move\", e.button, e.gamepad);\n\t\t// removegamepad(e.gamepad);\n\t}\n\n\t/**\n\t * var joystickX = applyDeadzone(gamepad.axes[0], 0.25);\n\t * @param number\n\t * @param threshold\n\t */\n\tfunction applyDeadzone(number:Float, threshold:Float) {\n\t\tvar percentage = (Math.abs(number) - threshold) / (1 - threshold);\n\t\tif (percentage < 0)\n\t\t\tpercentage = 0;\n\t\treturn percentage * (number > 0 ? 1 : -1);\n\t}\n\n\tstatic public function main() {\n\t\tvar app = new CCGamepad();\n\t}\n}\n\ntypedef GamePadObject = {\n\t@:optional var _id:String;\n\tvar gamepad:Gamepad;\n\tvar alias:String;\n\tvar buttonMap:Map<Int, String>;\n}\n","package model.constants;\n\nimport haxe.macro.Context;\n\nclass App {\n\tpublic static var NAME:String = \"[cc-gamepad]\";\n\n\tpublic static inline macro function getBuildDate() {\n\t\t#if !display\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#else\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#end\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\nimport js.lib.Object;\nimport haxe.Constraints.IMap;\nimport haxe.DynamicAccess;\n\n#if (js_es >= 5)\n@:coreApi class StringMap<T> implements IMap<String, T> {\n\tvar h:Dynamic;\n\n\tpublic inline function new() {\n\t\th = Object.create(null);\n\t}\n\n\tpublic inline function exists(key:String):Bool {\n\t\treturn Object.prototype.hasOwnProperty.call(h, key);\n\t}\n\n\tpublic inline function get(key:String):Null<T> {\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function set(key:String, value:T):Void {\n\t\th[cast key] = value;\n\t}\n\n\tpublic inline function remove(key:String):Bool {\n\t\treturn if (exists(key)) {\n\t\t\tjs.Syntax.delete(h, key); true;\n\t\t} else {\n\t\t\tfalse;\n\t\t}\n\t}\n\n\tpublic inline function keys():Iterator<String> {\n\t\treturn keysIterator(h);\n\t}\n\n\tpublic inline function iterator():Iterator<T> {\n\t\treturn valueIterator(h);\n\t}\n\n\tpublic inline function keyValueIterator():KeyValueIterator<String, T> {\n\t\treturn kvIterator(h);\n\t}\n\n\tpublic inline function copy():StringMap<T> {\n\t\treturn createCopy(h);\n\t}\n\n\tpublic inline function clear():Void {\n\t\th = Object.create(null);\n\t}\n\n\tpublic inline function toString():String {\n\t\treturn stringify(h);\n\t}\n\n\t// impl\n\n\tstatic function keysIterator(h:Dynamic):Iterator<String> {\n\t\tvar keys = Object.keys(h), len = keys.length, idx = 0;\n\t\treturn {\n\t\t\thasNext: () -> idx < len,\n\t\t\tnext: () -> keys[idx++]\n\t\t};\n\t}\n\n\tstatic function valueIterator<T>(h:Dynamic):Iterator<T> {\n\t\tvar keys = Object.keys(h), len = keys.length, idx = 0;\n\t\treturn {\n\t\t\thasNext: () -> idx < len,\n\t\t\tnext: () -> h[cast keys[idx++]]\n\t\t};\n\t}\n\n\tstatic function kvIterator<T>(h:Dynamic):KeyValueIterator<String, T> {\n\t\tvar keys = Object.keys(h), len = keys.length, idx = 0;\n\t\treturn {\n\t\t\thasNext: () -> idx < len,\n\t\t\tnext: () -> {var k = keys[idx++]; {key: k, value: h[cast k]}}\n\t\t};\n\t}\n\n\tstatic function createCopy<T>(h:Dynamic):StringMap<T> {\n\t\tvar copy = new StringMap();\n\t\tjs.Syntax.code(\"for (var key in {0}) {1}[key] = {0}[key]\", h, copy.h);\n\t\treturn copy;\n\t}\n\n\t@:analyzer(no_optimize)\n\tstatic function stringify(h:Dynamic):String {\n\t\tvar s = \"{\", first = true;\n\t\tjs.Syntax.code(\"for (var key in {0}) {\", h);\n\t\tjs.Syntax.code(\"\\tif ({0}) {0} = false; else {1} += ',';\", first, s);\n\t\tjs.Syntax.code(\"\\t{0} += key + ' => ' + {1}({2}[key]);\", s, Std.string, h);\n\t\tjs.Syntax.code(\"}\");\n\t\treturn s + \"}\";\n\t}\n}\n#else\nprivate class StringMapIterator<T> {\n\tvar map:StringMap<T>;\n\tvar keys:Array<String>;\n\tvar index:Int;\n\tvar count:Int;\n\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String, T> {\n\tprivate var h:Dynamic;\n\tprivate var rh:Dynamic;\n\n\tpublic inline function new():Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String):Bool {\n\t\treturn js.Syntax.code(\"__map_reserved[{0}]\", key) != null;\n\t}\n\n\tpublic inline function set(key:String, value:T):Void {\n\t\tif (isReserved(key))\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get(key:String):Null<T> {\n\t\tif (isReserved(key))\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists(key:String):Bool {\n\t\tif (isReserved(key))\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved(key:String, value:T):Void {\n\t\tif (rh == null)\n\t\t\trh = {};\n\t\trh[cast \"$\" + key] = value;\n\t}\n\n\tfunction getReserved(key:String):Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\" + key];\n\t}\n\n\tfunction existsReserved(key:String):Bool {\n\t\tif (rh == null)\n\t\t\treturn false;\n\t\treturn (cast rh).hasOwnProperty(\"$\" + key);\n\t}\n\n\tpublic function remove(key:String):Bool {\n\t\tif (isReserved(key)) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif (rh == null || !rh.hasOwnProperty(key))\n\t\t\t\treturn false;\n\t\t\tjs.Syntax.delete(rh, key);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif (!h.hasOwnProperty(key))\n\t\t\t\treturn false;\n\t\t\tjs.Syntax.delete(h, key);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys():Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\n\tfunction arrayKeys():Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\tjs.Syntax.code(\"for( var key in this.h ) {\");\n\t\t\tif (h.hasOwnProperty(key))\n\t\t\t\tout.push(key);\n\t\t\tjs.Syntax.code(\"}\");\n\t\t}\n\t\tif (rh != null)\n\t\t\tuntyped {\n\t\t\t\tjs.Syntax.code(\"for( var key in this.rh ) {\");\n\t\t\t\tif (key.charCodeAt(0) == \"$\".code)\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t\tjs.Syntax.code(\"}\");\n\t\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator():Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\t@:runtime public inline function keyValueIterator():KeyValueIterator<String, T> {\n\t\treturn new haxe.iterators.MapKeyValueIterator(this);\n\t}\n\n\tpublic function copy():StringMap<T> {\n\t\tvar copied = new StringMap();\n\t\tfor (key in keys())\n\t\t\tcopied.set(key, get(key));\n\t\treturn copied;\n\t}\n\n\tpublic function toString():String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor (i in 0...keys.length) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif (i < keys.length - 1)\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function clear():Void {\n\t\th = {};\n\t\trh = null;\n\t}\n\n\tstatic function __init__():Void {\n\t\tjs.Syntax.code(\"var __map_reserved = {};\");\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n"],
"names":[],
"mappings":";;gBAsBC,WAJD;AAAA,CAEsC,AAArC,WAAqC;AAFtC,CACkC,AAAjC,mBAAiC;AADlC,CAIC;AAJD,CAME,iCAA0B,mBAAoB,gBAAgB;AAAA,EAC7D,oBAAa,KAAE,2BAAyB,0BCf1B;ADc+C,EAG7D;AAH6D,EAI7D;AAJ6D;AANhE;iBA2EC,WACC;AAAA,WAAU;AAAV;;YA9DD,WAAqB;AAAA,EACpB,UAAU;AADU,EAEpB,SAAU;AAFU,EAGpB,gBAAkB;AAHE,EAIpB,iCAA0B;AAJN;QAOrB,WAAgB;AAAA,EACf,wBAAwB,mBAAoB;AAD7B,EAEf,wBAAwB,sBAAuB;AAFhC,EAIf,wBAAwB,oBAAqB;AAJ9B,EAKf,wBAAwB,kBAAmB;AAL5B,EAMf,wBAAwB,kBAAmB;AAN5B;6BAUhB,YAAmD;AAAA,EAElD,oBAAY,oBAAqB;AAFiB,EAGlD,eAA8B;AAHoB,EAIlD,oBAAY;AAJsC,EAMlD,cAAc,gCAAwB;AANY,EAOlD,oBAAY;AAPsC;gCAUnD,YAEC;AAAA,sBAAY,uBAAwB;AAApC;8BAID,YAEC;AAAA,sBAAY,sBAAuB,SAAU;AAA7C;4BAGD,YAEC;AAAA,sBAAY,oBAAqB,SAAU;AAA3C;4BAGD,YAEC;AAAA,sBAAY,oBAAqB,SAAU;AAA3C;iBASD,2BAAsD;AAAA,EACrD,iBAAiB,CAAC,SAAS,UAAU,aAAa,CAAC,IAAI;AADF,EAErD,EAAI,cAAa,GAChB;AAAA,gBAAa;AAAb;AAHoD,EAIrD,OAAO,aAAa,CAAC,SAAS,IAAI,IAAI;AAJe;;wBEtDtD,WACC;AAAA,UAAI,cAAc;AAAlB;mCCCO,gBAPT;AAAA,CAEmB,AAAlB,eAAkB;AAFnB,CASE,aAAa;AATf;;UAeS,WAEP;AAAA,SAAO,eAAU;AAAjB;QAMO,WAEP;AAAA,SAAO,WAAM;AAAb;;;;;;2BF/C+B;;;;"
}